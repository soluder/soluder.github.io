(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{200:function(r,a,e){"use strict";e.r(a);var t=e(3),_=Object(t.a)({},function(){var r=this,a=r._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":r.$parent.slotKey}},[a("h1",{attrs:{id:"什么是docker-为什么要使用docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是docker-为什么要使用docker","aria-hidden":"true"}},[r._v("#")]),r._v(" 什么是Docker，为什么要使用Docker？")]),r._v(" "),a("h2",{attrs:{id:"什么是docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是docker","aria-hidden":"true"}},[r._v("#")]),r._v(" 什么是docker")]),r._v(" "),a("p",[r._v("个人见解：Docker就是一个高性能的VM，并且不会浪费资源，主要用于Linux环境的虚拟化，类似VBox这种虚拟机，不同的是Docker专门为了服务器虚拟化，并支持镜像分享等功能。")]),r._v(" "),a("p",[r._v("Docker 是一个开源项目，诞生于 2013 年初，最初是 dotCloud 公司内部的一个业余项目。它基于 Google 公司推出的 Go 语言实现。 项目后来加入了 Linux 基金会，遵从了 Apache 2.0 协议，项目代码在 GitHub 上进行维护。")]),r._v(" "),a("p",[r._v("Docker 自开源后受到广泛的关注和讨论，以至于dotCloud 公司后来都改名为 Docker Inc。Redhat已经在其 RHEL6.5 中集中支持 Docker；Google 也在其 PaaS 产品中广泛应用。")]),r._v(" "),a("p",[r._v("Docker的主要目标：")]),r._v(" "),a("p",[r._v("通过对应用组件的封装、分发、部署、运行等生命周期的管理，达到应用级别的一次封装，到处运行。")]),r._v(" "),a("p",[r._v("小贴士：这里的应用组件，可以是WEB应用，也可以是一套数据库服务，甚至可以是一个操作系统编译器。")]),r._v(" "),a("h2",{attrs:{id:"为什么使用docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用docker","aria-hidden":"true"}},[r._v("#")]),r._v(" 为什么使用docker")]),r._v(" "),a("p",[r._v("个人简介：主要为了解决“在我机器上运行的挺好，在你机器上运行就不对”，这类问题的，可以直接部署到Docker，迁移过去，环境都是一样的了就。")]),r._v(" "),a("p",[r._v("Docker容器虚拟化的优点")]),r._v(" "),a("h3",{attrs:{id:"_1-环境隔离"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-环境隔离","aria-hidden":"true"}},[r._v("#")]),r._v(" 1. 环境隔离")]),r._v(" "),a("p",[r._v("通过cgroups和namesapce进行实现资源隔离，实现一台机器运行多个容器互不影响。")]),r._v(" "),a("h3",{attrs:{id:"_2-更快速的交付部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-更快速的交付部署","aria-hidden":"true"}},[r._v("#")]),r._v(" 2. 更快速的交付部署")]),r._v(" "),a("p",[r._v("使用docker，开发人员可以利用镜像快速构建一套标准的研发环境，开发完成后，测试和运维人员可以直接通过使用相同的环境来部署代码。Docker可以快速创建和删除容器，实现快速迭代，大量节约开发、测试、部署的时间。并且，各个步骤都有明确的配置和操作，整个过程全程公司内文档说明，使团队更容易理解应用创建和工作的过程。")]),r._v(" "),a("h3",{attrs:{id:"_3-更高效的资源利用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-更高效的资源利用","aria-hidden":"true"}},[r._v("#")]),r._v(" 3. 更高效的资源利用")]),r._v(" "),a("p",[r._v("docker容器的运行不需要额外的虚拟化管理程序的支持，它是内核级的虚拟化，可以实现更高的性能，同时对资源的额外需求很低。")]),r._v(" "),a("h3",{attrs:{id:"_4-更易迁移扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-更易迁移扩展","aria-hidden":"true"}},[r._v("#")]),r._v(" 4. 更易迁移扩展")]),r._v(" "),a("p",[r._v("docker容器几乎可以在任意的平台上运行，包括乌力吉、虚拟机、公有云、私有云、个人电脑、服务器等，这种兼容性让用户可以在不同平台之间轻松的迁移应用。")]),r._v(" "),a("h3",{attrs:{id:"_5-更简单的更新管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-更简单的更新管理","aria-hidden":"true"}},[r._v("#")]),r._v(" 5. 更简单的更新管理")]),r._v(" "),a("p",[r._v("使用Dockerfile，只需要小小的配置修改，就可以替代以往的大量的更新工作。并且所有修改都是以增量的方式进行分发和更新，从而实现自动化和高效的容器管理。")])])},[],!1,null,null,null);a.default=_.exports}}]);